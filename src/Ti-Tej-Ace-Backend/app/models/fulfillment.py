# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.agent import Agent  # noqa: F401,E501
from models.base_model_ import Model
from models.contact import Contact  # noqa: F401,E501
from models.fulfillment_customer import FulfillmentCustomer  # noqa: F401,E501
from models.fulfillment_end import FulfillmentEnd  # noqa: F401,E501
from models.fulfillment_start import FulfillmentStart  # noqa: F401,E501
from models.person import Person  # noqa: F401,E501
from models.rateable import Rateable  # noqa: F401,E501
from models.state import State  # noqa: F401,E501
from models.tags import Tags  # noqa: F401,E501
from models.vehicle import Vehicle  # noqa: F401,E501


class Fulfillment(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, type: str=None, provider_id: str=None, rating: str=None, state: State=None, tracking: bool=False, customer: FulfillmentCustomer=None, agent: Agent=None, person: Person=None, contact: Contact=None, vehicle: Vehicle=None, start: FulfillmentStart=None, end: FulfillmentEnd=None, rateable: Rateable=None, tags: Tags=None):  # noqa: E501
        """Fulfillment - a model defined in Swagger

        :param id: The id of this Fulfillment.  # noqa: E501
        :type id: str
        :param type: The type of this Fulfillment.  # noqa: E501
        :type type: str
        :param provider_id: The provider_id of this Fulfillment.  # noqa: E501
        :type provider_id: Providerpropertiesid
        :param rating: The rating of this Fulfillment.  # noqa: E501
        :type rating: str
        :param state: The state of this Fulfillment.  # noqa: E501
        :type state: State
        :param tracking: The tracking of this Fulfillment.  # noqa: E501
        :type tracking: bool
        :param customer: The customer of this Fulfillment.  # noqa: E501
        :type customer: FulfillmentCustomer
        :param agent: The agent of this Fulfillment.  # noqa: E501
        :type agent: Agent
        :param person: The person of this Fulfillment.  # noqa: E501
        :type person: Person
        :param contact: The contact of this Fulfillment.  # noqa: E501
        :type contact: Contact
        :param vehicle: The vehicle of this Fulfillment.  # noqa: E501
        :type vehicle: Vehicle
        :param start: The start of this Fulfillment.  # noqa: E501
        :type start: FulfillmentStart
        :param end: The end of this Fulfillment.  # noqa: E501
        :type end: FulfillmentEnd
        :param rateable: The rateable of this Fulfillment.  # noqa: E501
        :type rateable: Rateable
        :param tags: The tags of this Fulfillment.  # noqa: E501
        :type tags: Tags
        """
        self.swagger_types = {
            'id': str,
            'type': str,
            'provider_id': str,
            'rating': str,
            'state': State,
            'tracking': bool,
            'customer': FulfillmentCustomer,
            'agent': Agent,
            'person': Person,
            'contact': Contact,
            'vehicle': Vehicle,
            'start': FulfillmentStart,
            'end': FulfillmentEnd,
            'rateable': Rateable,
            'tags': Tags
        }

        self.attribute_map = {
            'id': 'id',
            'type': 'type',
            'provider_id': 'provider_id',
            'rating': 'rating',
            'state': 'state',
            'tracking': 'tracking',
            'customer': 'customer',
            'agent': 'agent',
            'person': 'person',
            'contact': 'contact',
            'vehicle': 'vehicle',
            'start': 'start',
            'end': 'end',
            'rateable': 'rateable',
            'tags': 'tags'
        }
        self._id = id
        self._type = type
        self._provider_id = provider_id
        self._rating = rating
        self._state = state
        self._tracking = tracking
        self._customer = customer
        self._agent = agent
        self._person = person
        self._contact = contact
        self._vehicle = vehicle
        self._start = start
        self._end = end
        self._rateable = rateable
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt) -> 'Fulfillment':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Fulfillment of this Fulfillment.  # noqa: E501
        :rtype: Fulfillment
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Fulfillment.

        Unique reference ID to the fulfillment of an order  # noqa: E501

        :return: The id of this Fulfillment.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Fulfillment.

        Unique reference ID to the fulfillment of an order  # noqa: E501

        :param id: The id of this Fulfillment.
        :type id: str
        """

        self._id = id

    @property
    def type(self) -> str:
        """Gets the type of this Fulfillment.

        This describes the type of fulfillment  # noqa: E501

        :return: The type of this Fulfillment.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Fulfillment.

        This describes the type of fulfillment  # noqa: E501

        :param type: The type of this Fulfillment.
        :type type: str
        """

        self._type = type

    @property
    def provider_id(self) -> str:
        """Gets the provider_id of this Fulfillment.


        :return: The provider_id of this Fulfillment.
        :rtype: Providerpropertiesid
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id: str):
        """Sets the provider_id of this Fulfillment.


        :param provider_id: The provider_id of this Fulfillment.
        :type provider_id: Providerpropertiesid
        """

        self._provider_id = provider_id

    @property
    def rating(self) -> str:
        """Gets the rating of this Fulfillment.


        :return: The rating of this Fulfillment.
        :rtype: str
        """
        return self._rating

    @rating.setter
    def rating(self, rating: str):
        """Sets the rating of this Fulfillment.


        :param rating: The rating of this Fulfillment.
        :type rating: str
        """

        self._rating = rating

    @property
    def state(self) -> State:
        """Gets the state of this Fulfillment.


        :return: The state of this Fulfillment.
        :rtype: State
        """
        return self._state

    @state.setter
    def state(self, state: State):
        """Sets the state of this Fulfillment.


        :param state: The state of this Fulfillment.
        :type state: State
        """

        self._state = state

    @property
    def tracking(self) -> bool:
        """Gets the tracking of this Fulfillment.

        Indicates whether the fulfillment allows tracking  # noqa: E501

        :return: The tracking of this Fulfillment.
        :rtype: bool
        """
        return self._tracking

    @tracking.setter
    def tracking(self, tracking: bool):
        """Sets the tracking of this Fulfillment.

        Indicates whether the fulfillment allows tracking  # noqa: E501

        :param tracking: The tracking of this Fulfillment.
        :type tracking: bool
        """

        self._tracking = tracking

    @property
    def customer(self) -> FulfillmentCustomer:
        """Gets the customer of this Fulfillment.


        :return: The customer of this Fulfillment.
        :rtype: FulfillmentCustomer
        """
        return self._customer

    @customer.setter
    def customer(self, customer: FulfillmentCustomer):
        """Sets the customer of this Fulfillment.


        :param customer: The customer of this Fulfillment.
        :type customer: FulfillmentCustomer
        """

        self._customer = customer

    @property
    def agent(self) -> Agent:
        """Gets the agent of this Fulfillment.


        :return: The agent of this Fulfillment.
        :rtype: Agent
        """
        return self._agent

    @agent.setter
    def agent(self, agent: Agent):
        """Sets the agent of this Fulfillment.


        :param agent: The agent of this Fulfillment.
        :type agent: Agent
        """

        self._agent = agent

    @property
    def person(self) -> Person:
        """Gets the person of this Fulfillment.


        :return: The person of this Fulfillment.
        :rtype: Person
        """
        return self._person

    @person.setter
    def person(self, person: Person):
        """Sets the person of this Fulfillment.


        :param person: The person of this Fulfillment.
        :type person: Person
        """

        self._person = person

    @property
    def contact(self) -> Contact:
        """Gets the contact of this Fulfillment.


        :return: The contact of this Fulfillment.
        :rtype: Contact
        """
        return self._contact

    @contact.setter
    def contact(self, contact: Contact):
        """Sets the contact of this Fulfillment.


        :param contact: The contact of this Fulfillment.
        :type contact: Contact
        """

        self._contact = contact

    @property
    def vehicle(self) -> Vehicle:
        """Gets the vehicle of this Fulfillment.


        :return: The vehicle of this Fulfillment.
        :rtype: Vehicle
        """
        return self._vehicle

    @vehicle.setter
    def vehicle(self, vehicle: Vehicle):
        """Sets the vehicle of this Fulfillment.


        :param vehicle: The vehicle of this Fulfillment.
        :type vehicle: Vehicle
        """

        self._vehicle = vehicle

    @property
    def start(self) -> FulfillmentStart:
        """Gets the start of this Fulfillment.


        :return: The start of this Fulfillment.
        :rtype: FulfillmentStart
        """
        return self._start

    @start.setter
    def start(self, start: FulfillmentStart):
        """Sets the start of this Fulfillment.


        :param start: The start of this Fulfillment.
        :type start: FulfillmentStart
        """

        self._start = start

    @property
    def end(self) -> FulfillmentEnd:
        """Gets the end of this Fulfillment.


        :return: The end of this Fulfillment.
        :rtype: FulfillmentEnd
        """
        return self._end

    @end.setter
    def end(self, end: FulfillmentEnd):
        """Sets the end of this Fulfillment.


        :param end: The end of this Fulfillment.
        :type end: FulfillmentEnd
        """

        self._end = end

    @property
    def rateable(self) -> Rateable:
        """Gets the rateable of this Fulfillment.


        :return: The rateable of this Fulfillment.
        :rtype: Rateable
        """
        return self._rateable

    @rateable.setter
    def rateable(self, rateable: Rateable):
        """Sets the rateable of this Fulfillment.


        :param rateable: The rateable of this Fulfillment.
        :type rateable: Rateable
        """

        self._rateable = rateable

    @property
    def tags(self) -> Tags:
        """Gets the tags of this Fulfillment.


        :return: The tags of this Fulfillment.
        :rtype: Tags
        """
        return self._tags

    @tags.setter
    def tags(self, tags: Tags):
        """Sets the tags of this Fulfillment.


        :param tags: The tags of this Fulfillment.
        :type tags: Tags
        """

        self._tags = tags
