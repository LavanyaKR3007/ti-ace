# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model
from models.tags import Tags  # noqa: F401,E501


class Contact(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, phone: str=None, email: str=None, tags: Tags=None):  # noqa: E501
        """Contact - a model defined in Swagger

        :param phone: The phone of this Contact.  # noqa: E501
        :type phone: str
        :param email: The email of this Contact.  # noqa: E501
        :type email: str
        :param tags: The tags of this Contact.  # noqa: E501
        :type tags: Tags
        """
        self.swagger_types = {
            'phone': str,
            'email': str,
            'tags': Tags
        }

        self.attribute_map = {
            'phone': 'phone',
            'email': 'email',
            'tags': 'tags'
        }
        self._phone = phone
        self._email = email
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt) -> 'Contact':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Contact of this Contact.  # noqa: E501
        :rtype: Contact
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phone(self) -> str:
        """Gets the phone of this Contact.


        :return: The phone of this Contact.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone: str):
        """Sets the phone of this Contact.


        :param phone: The phone of this Contact.
        :type phone: str
        """

        self._phone = phone

    @property
    def email(self) -> str:
        """Gets the email of this Contact.


        :return: The email of this Contact.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this Contact.


        :param email: The email of this Contact.
        :type email: str
        """

        self._email = email

    @property
    def tags(self) -> Tags:
        """Gets the tags of this Contact.


        :return: The tags of this Contact.
        :rtype: Tags
        """
        return self._tags

    @tags.setter
    def tags(self, tags: Tags):
        """Sets the tags of this Contact.


        :param tags: The tags of this Contact.
        :type tags: Tags
        """

        self._tags = tags
