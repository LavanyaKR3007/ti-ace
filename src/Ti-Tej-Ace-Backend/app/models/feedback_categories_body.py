# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model
from models.context import Context  # noqa: F401,E501
from models import RatingpropertiesratingCategory  # noqa: F401,E501


class FeedbackCategoriesBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, context: Context=None, feedback_categories: List[RatingpropertiesratingCategory]=None):  # noqa: E501
        """FeedbackCategoriesBody - a model defined in Swagger

        :param context: The context of this FeedbackCategoriesBody.  # noqa: E501
        :type context: Context
        :param feedback_categories: The feedback_categories of this FeedbackCategoriesBody.  # noqa: E501
        :type feedback_categories: List[RatingpropertiesratingCategory]
        """
        self.swagger_types = {
            'context': Context,
            'feedback_categories': List[RatingpropertiesratingCategory]
        }

        self.attribute_map = {
            'context': 'context',
            'feedback_categories': 'feedback_categories'
        }
        self._context = context
        self._feedback_categories = feedback_categories

    @classmethod
    def from_dict(cls, dikt) -> 'FeedbackCategoriesBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The feedback_categories_body of this FeedbackCategoriesBody.  # noqa: E501
        :rtype: FeedbackCategoriesBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self) -> Context:
        """Gets the context of this FeedbackCategoriesBody.


        :return: The context of this FeedbackCategoriesBody.
        :rtype: Context
        """
        return self._context

    @context.setter
    def context(self, context: Context):
        """Sets the context of this FeedbackCategoriesBody.


        :param context: The context of this FeedbackCategoriesBody.
        :type context: Context
        """

        self._context = context

    @property
    def feedback_categories(self) -> List[RatingpropertiesratingCategory]:
        """Gets the feedback_categories of this FeedbackCategoriesBody.


        :return: The feedback_categories of this FeedbackCategoriesBody.
        :rtype: List[RatingpropertiesratingCategory]
        """
        return self._feedback_categories

    @feedback_categories.setter
    def feedback_categories(self, feedback_categories: List[RatingpropertiesratingCategory]):
        """Sets the feedback_categories of this FeedbackCategoriesBody.


        :param feedback_categories: The feedback_categories of this FeedbackCategoriesBody.
        :type feedback_categories: List[RatingpropertiesratingCategory]
        """

        self._feedback_categories = feedback_categories
