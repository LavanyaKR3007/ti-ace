# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model
from models.descriptor import Descriptor  # noqa: F401,E501
from models import Policypropertiesid  # noqa: F401,E501
from models.time import Time  # noqa: F401,E501


class Policy(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, descriptor: Descriptor=None, parent_policy_id: Policypropertiesid=None, time: Time=None):  # noqa: E501
        """Policy - a model defined in Swagger

        :param id: The id of this Policy.  # noqa: E501
        :type id: str
        :param descriptor: The descriptor of this Policy.  # noqa: E501
        :type descriptor: Descriptor
        :param parent_policy_id: The parent_policy_id of this Policy.  # noqa: E501
        :type parent_policy_id: Policypropertiesid
        :param time: The time of this Policy.  # noqa: E501
        :type time: Time
        """
        self.swagger_types = {
            'id': str,
            'descriptor': Descriptor,
            'parent_policy_id': Policypropertiesid,
            'time': Time
        }

        self.attribute_map = {
            'id': 'id',
            'descriptor': 'descriptor',
            'parent_policy_id': 'parent_policy_id',
            'time': 'time'
        }
        self._id = id
        self._descriptor = descriptor
        self._parent_policy_id = parent_policy_id
        self._time = time

    @classmethod
    def from_dict(cls, dikt) -> 'Policy':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Policy of this Policy.  # noqa: E501
        :rtype: Policy
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Policy.


        :return: The id of this Policy.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Policy.


        :param id: The id of this Policy.
        :type id: str
        """

        self._id = id

    @property
    def descriptor(self) -> Descriptor:
        """Gets the descriptor of this Policy.


        :return: The descriptor of this Policy.
        :rtype: Descriptor
        """
        return self._descriptor

    @descriptor.setter
    def descriptor(self, descriptor: Descriptor):
        """Sets the descriptor of this Policy.


        :param descriptor: The descriptor of this Policy.
        :type descriptor: Descriptor
        """

        self._descriptor = descriptor

    @property
    def parent_policy_id(self) -> Policypropertiesid:
        """Gets the parent_policy_id of this Policy.


        :return: The parent_policy_id of this Policy.
        :rtype: Policypropertiesid
        """
        return self._parent_policy_id

    @parent_policy_id.setter
    def parent_policy_id(self, parent_policy_id: Policypropertiesid):
        """Sets the parent_policy_id of this Policy.


        :param parent_policy_id: The parent_policy_id of this Policy.
        :type parent_policy_id: Policypropertiesid
        """

        self._parent_policy_id = parent_policy_id

    @property
    def time(self) -> Time:
        """Gets the time of this Policy.


        :return: The time of this Policy.
        :rtype: Time
        """
        return self._time

    @time.setter
    def time(self, time: Time):
        """Sets the time of this Policy.


        :param time: The time of this Policy.
        :type time: Time
        """

        self._time = time
