# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model
from models.scalar import Scalar  # noqa: F401,E501


class ItemQuantityAllocated(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, count: int=None, measure: Scalar=None):  # noqa: E501
        """ItemQuantityAllocated - a model defined in Swagger

        :param count: The count of this ItemQuantityAllocated.  # noqa: E501
        :type count: int
        :param measure: The measure of this ItemQuantityAllocated.  # noqa: E501
        :type measure: Scalar
        """
        self.swagger_types = {
            'count': int,
            'measure': Scalar
        }

        self.attribute_map = {
            'count': 'count',
            'measure': 'measure'
        }
        self._count = count
        self._measure = measure

    @classmethod
    def from_dict(cls, dikt) -> 'ItemQuantityAllocated':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ItemQuantity_allocated of this ItemQuantityAllocated.  # noqa: E501
        :rtype: ItemQuantityAllocated
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self) -> int:
        """Gets the count of this ItemQuantityAllocated.


        :return: The count of this ItemQuantityAllocated.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count: int):
        """Sets the count of this ItemQuantityAllocated.


        :param count: The count of this ItemQuantityAllocated.
        :type count: int
        """

        self._count = count

    @property
    def measure(self) -> Scalar:
        """Gets the measure of this ItemQuantityAllocated.


        :return: The measure of this ItemQuantityAllocated.
        :rtype: Scalar
        """
        return self._measure

    @measure.setter
    def measure(self, measure: Scalar):
        """Sets the measure of this ItemQuantityAllocated.


        :param measure: The measure of this ItemQuantityAllocated.
        :type measure: Scalar
        """

        self._measure = measure
