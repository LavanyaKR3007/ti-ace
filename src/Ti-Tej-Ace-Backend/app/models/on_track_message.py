# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model
from models.tracking import Tracking  # noqa: F401,E501


class OnTrackMessage(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, tracking: Tracking=None):  # noqa: E501
        """OnTrackMessage - a model defined in Swagger

        :param tracking: The tracking of this OnTrackMessage.  # noqa: E501
        :type tracking: Tracking
        """
        self.swagger_types = {
            'tracking': Tracking
        }

        self.attribute_map = {
            'tracking': 'tracking'
        }
        self._tracking = tracking

    @classmethod
    def from_dict(cls, dikt) -> 'OnTrackMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The on_track_message of this OnTrackMessage.  # noqa: E501
        :rtype: OnTrackMessage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tracking(self) -> Tracking:
        """Gets the tracking of this OnTrackMessage.


        :return: The tracking of this OnTrackMessage.
        :rtype: Tracking
        """
        return self._tracking

    @tracking.setter
    def tracking(self, tracking: Tracking):
        """Sets the tracking of this OnTrackMessage.


        :param tracking: The tracking of this OnTrackMessage.
        :type tracking: Tracking
        """
        if tracking is None:
            raise ValueError("Invalid value for `tracking`, must not be `None`")  # noqa: E501

        self._tracking = tracking
