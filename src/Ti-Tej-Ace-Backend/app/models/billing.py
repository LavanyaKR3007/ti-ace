# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.address import Address  # noqa: F401,E501
from models.base_model_ import Model
from models.organization import Organization  # noqa: F401,E501
from models.time import Time  # noqa: F401,E501


class Billing(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, organization: Organization=None, address: Address=None, email: str=None, phone: str=None, time: Time=None, tax_number: str=None, created_at: datetime=None):  # noqa: E501
        """Billing - a model defined in Swagger

        :param name: The name of this Billing.  # noqa: E501
        :type name: str
        :param organization: The organization of this Billing.  # noqa: E501
        :type organization: Organization
        :param address: The address of this Billing.  # noqa: E501
        :type address: Address
        :param email: The email of this Billing.  # noqa: E501
        :type email: str
        :param phone: The phone of this Billing.  # noqa: E501
        :type phone: str
        :param time: The time of this Billing.  # noqa: E501
        :type time: Time
        :param tax_number: The tax_number of this Billing.  # noqa: E501
        :type tax_number: str
        :param created_at: The created_at of this Billing.  # noqa: E501
        :type created_at: datetime
        """
        self.swagger_types = {
            'name': str,
            'organization': Organization,
            'address': Address,
            'email': str,
            'phone': str,
            'time': Time,
            'tax_number': str,
            'created_at': datetime
        }

        self.attribute_map = {
            'name': 'name',
            'organization': 'organization',
            'address': 'address',
            'email': 'email',
            'phone': 'phone',
            'time': 'time',
            'tax_number': 'tax_number',
            'created_at': 'created_at'
        }
        self._name = name
        self._organization = organization
        self._address = address
        self._email = email
        self._phone = phone
        self._time = time
        self._tax_number = tax_number
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt) -> 'Billing':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Billing of this Billing.  # noqa: E501
        :rtype: Billing
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Billing.

        Name of the person under who's name the bill will be generated.  # noqa: E501

        :return: The name of this Billing.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Billing.

        Name of the person under who's name the bill will be generated.  # noqa: E501

        :param name: The name of this Billing.
        :type name: str
        """

        self._name = name

    @property
    def organization(self) -> Organization:
        """Gets the organization of this Billing.


        :return: The organization of this Billing.
        :rtype: Organization
        """
        return self._organization

    @organization.setter
    def organization(self, organization: Organization):
        """Sets the organization of this Billing.


        :param organization: The organization of this Billing.
        :type organization: Organization
        """

        self._organization = organization

    @property
    def address(self) -> Address:
        """Gets the address of this Billing.


        :return: The address of this Billing.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address: Address):
        """Sets the address of this Billing.


        :param address: The address of this Billing.
        :type address: Address
        """

        self._address = address

    @property
    def email(self) -> str:
        """Gets the email of this Billing.

        Email address of the person / organization being billed. The BPP must send the bill to this email address. The format of the bill may be defined in the network policy.  # noqa: E501

        :return: The email of this Billing.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this Billing.

        Email address of the person / organization being billed. The BPP must send the bill to this email address. The format of the bill may be defined in the network policy.  # noqa: E501

        :param email: The email of this Billing.
        :type email: str
        """

        self._email = email

    @property
    def phone(self) -> str:
        """Gets the phone of this Billing.

        Phone number of the person / organization being billed. The BPP must send the bill to this phone number as per the format specified in the network policy. In case the bill is a downloadable file, it is recommended the bill should be sent to the phone number as a downloadable link.  # noqa: E501

        :return: The phone of this Billing.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone: str):
        """Sets the phone of this Billing.

        Phone number of the person / organization being billed. The BPP must send the bill to this phone number as per the format specified in the network policy. In case the bill is a downloadable file, it is recommended the bill should be sent to the phone number as a downloadable link.  # noqa: E501

        :param phone: The phone of this Billing.
        :type phone: str
        """

        self._phone = phone

    @property
    def time(self) -> Time:
        """Gets the time of this Billing.


        :return: The time of this Billing.
        :rtype: Time
        """
        return self._time

    @time.setter
    def time(self, time: Time):
        """Sets the time of this Billing.


        :param time: The time of this Billing.
        :type time: Time
        """

        self._time = time

    @property
    def tax_number(self) -> str:
        """Gets the tax_number of this Billing.

        This is the identity of a Tax-paying person or an organization. This number can be provided to the BPP to avail tax benefits, if applicable. The format of this string should be specified in the network policy  # noqa: E501

        :return: The tax_number of this Billing.
        :rtype: str
        """
        return self._tax_number

    @tax_number.setter
    def tax_number(self, tax_number: str):
        """Sets the tax_number of this Billing.

        This is the identity of a Tax-paying person or an organization. This number can be provided to the BPP to avail tax benefits, if applicable. The format of this string should be specified in the network policy  # noqa: E501

        :param tax_number: The tax_number of this Billing.
        :type tax_number: str
        """

        self._tax_number = tax_number

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this Billing.

        Date and time at which this bill was generated by the BPP.  # noqa: E501

        :return: The created_at of this Billing.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this Billing.

        Date and time at which this bill was generated by the BPP.  # noqa: E501

        :param created_at: The created_at of this Billing.
        :type created_at: datetime
        """

        self._created_at = created_at
