# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model


class Fee(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, value: str=None, currency: str=None):  # noqa: E501
        """Fee - a model defined in Swagger

        :param value: The value of this Fee.  # noqa: E501
        :type value: str
        :param currency: The currency of this Fee.  # noqa: E501
        :type currency: str
        """
        self.swagger_types = {
            'value': str,
            'currency': str
        }

        self.attribute_map = {
            'value': 'value',
            'currency': 'currency'
        }
        self._value = value
        self._currency = currency

    @classmethod
    def from_dict(cls, dikt) -> 'Fee':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Fee of this Fee.  # noqa: E501
        :rtype: Fee
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self) -> str:
        """Gets the value of this Fee.


        :return: The value of this Fee.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this Fee.


        :param value: The value of this Fee.
        :type value: str
        """

        self._value = value

    @property
    def currency(self) -> str:
        """Gets the currency of this Fee.


        :return: The currency of this Fee.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency: str):
        """Sets the currency of this Fee.


        :param currency: The currency of this Fee.
        :type currency: str
        """

        self._currency = currency
