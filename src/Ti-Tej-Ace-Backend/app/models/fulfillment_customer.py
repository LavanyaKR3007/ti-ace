# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model
from models.contact import Contact  # noqa: F401,E501
from models.person import Person  # noqa: F401,E501


class FulfillmentCustomer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, person: Person=None, contact: Contact=None):  # noqa: E501
        """FulfillmentCustomer - a model defined in Swagger

        :param person: The person of this FulfillmentCustomer.  # noqa: E501
        :type person: Person
        :param contact: The contact of this FulfillmentCustomer.  # noqa: E501
        :type contact: Contact
        """
        self.swagger_types = {
            'person': Person,
            'contact': Contact
        }

        self.attribute_map = {
            'person': 'person',
            'contact': 'contact'
        }
        self._person = person
        self._contact = contact

    @classmethod
    def from_dict(cls, dikt) -> 'FulfillmentCustomer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Fulfillment_customer of this FulfillmentCustomer.  # noqa: E501
        :rtype: FulfillmentCustomer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def person(self) -> Person:
        """Gets the person of this FulfillmentCustomer.


        :return: The person of this FulfillmentCustomer.
        :rtype: Person
        """
        return self._person

    @person.setter
    def person(self, person: Person):
        """Sets the person of this FulfillmentCustomer.


        :param person: The person of this FulfillmentCustomer.
        :type person: Person
        """

        self._person = person

    @property
    def contact(self) -> Contact:
        """Gets the contact of this FulfillmentCustomer.


        :return: The contact of this FulfillmentCustomer.
        :rtype: Contact
        """
        return self._contact

    @contact.setter
    def contact(self, contact: Contact):
        """Sets the contact of this FulfillmentCustomer.


        :param contact: The contact of this FulfillmentCustomer.
        :type contact: Contact
        """

        self._contact = contact
