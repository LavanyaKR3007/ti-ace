# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model
from models.duration import Duration  # noqa: F401,E501
from models.schedule import Schedule  # noqa: F401,E501
from models.time_range import TimeRange  # noqa: F401,E501


class Time(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, label: str=None, timestamp: datetime=None, duration: Duration=None, range: TimeRange=None, days: str=None, schedule: Schedule=None):  # noqa: E501
        """Time - a model defined in Swagger

        :param label: The label of this Time.  # noqa: E501
        :type label: str
        :param timestamp: The timestamp of this Time.  # noqa: E501
        :type timestamp: datetime
        :param duration: The duration of this Time.  # noqa: E501
        :type duration: Duration
        :param range: The range of this Time.  # noqa: E501
        :type range: TimeRange
        :param days: The days of this Time.  # noqa: E501
        :type days: str
        :param schedule: The schedule of this Time.  # noqa: E501
        :type schedule: Schedule
        """
        self.swagger_types = {
            'label': str,
            'timestamp': datetime,
            'duration': Duration,
            'range': TimeRange,
            'days': str,
            'schedule': Schedule
        }

        self.attribute_map = {
            'label': 'label',
            'timestamp': 'timestamp',
            'duration': 'duration',
            'range': 'range',
            'days': 'days',
            'schedule': 'schedule'
        }
        self._label = label
        self._timestamp = timestamp
        self._duration = duration
        self._range = range
        self._days = days
        self._schedule = schedule

    @classmethod
    def from_dict(cls, dikt) -> 'Time':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Time of this Time.  # noqa: E501
        :rtype: Time
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self) -> str:
        """Gets the label of this Time.


        :return: The label of this Time.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label: str):
        """Sets the label of this Time.


        :param label: The label of this Time.
        :type label: str
        """

        self._label = label

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this Time.


        :return: The timestamp of this Time.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this Time.


        :param timestamp: The timestamp of this Time.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def duration(self) -> Duration:
        """Gets the duration of this Time.


        :return: The duration of this Time.
        :rtype: Duration
        """
        return self._duration

    @duration.setter
    def duration(self, duration: Duration):
        """Sets the duration of this Time.


        :param duration: The duration of this Time.
        :type duration: Duration
        """

        self._duration = duration

    @property
    def range(self) -> TimeRange:
        """Gets the range of this Time.


        :return: The range of this Time.
        :rtype: TimeRange
        """
        return self._range

    @range.setter
    def range(self, range: TimeRange):
        """Sets the range of this Time.


        :param range: The range of this Time.
        :type range: TimeRange
        """

        self._range = range

    @property
    def days(self) -> str:
        """Gets the days of this Time.

        comma separated values representing days of the week  # noqa: E501

        :return: The days of this Time.
        :rtype: str
        """
        return self._days

    @days.setter
    def days(self, days: str):
        """Sets the days of this Time.

        comma separated values representing days of the week  # noqa: E501

        :param days: The days of this Time.
        :type days: str
        """

        self._days = days

    @property
    def schedule(self) -> Schedule:
        """Gets the schedule of this Time.


        :return: The schedule of this Time.
        :rtype: Schedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule: Schedule):
        """Sets the schedule of this Time.


        :param schedule: The schedule of this Time.
        :type schedule: Schedule
        """

        self._schedule = schedule
