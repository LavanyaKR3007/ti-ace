# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model


class OnSupportMessage(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, phone: str=None, email: str=None, uri: str=None):  # noqa: E501
        """OnSupportMessage - a model defined in Swagger

        :param phone: The phone of this OnSupportMessage.  # noqa: E501
        :type phone: str
        :param email: The email of this OnSupportMessage.  # noqa: E501
        :type email: str
        :param uri: The uri of this OnSupportMessage.  # noqa: E501
        :type uri: str
        """
        self.swagger_types = {
            'phone': str,
            'email': str,
            'uri': str
        }

        self.attribute_map = {
            'phone': 'phone',
            'email': 'email',
            'uri': 'uri'
        }
        self._phone = phone
        self._email = email
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt) -> 'OnSupportMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The on_support_message of this OnSupportMessage.  # noqa: E501
        :rtype: OnSupportMessage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phone(self) -> str:
        """Gets the phone of this OnSupportMessage.


        :return: The phone of this OnSupportMessage.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone: str):
        """Sets the phone of this OnSupportMessage.


        :param phone: The phone of this OnSupportMessage.
        :type phone: str
        """

        self._phone = phone

    @property
    def email(self) -> str:
        """Gets the email of this OnSupportMessage.


        :return: The email of this OnSupportMessage.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this OnSupportMessage.


        :param email: The email of this OnSupportMessage.
        :type email: str
        """

        self._email = email

    @property
    def uri(self) -> str:
        """Gets the uri of this OnSupportMessage.


        :return: The uri of this OnSupportMessage.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri: str):
        """Sets the uri of this OnSupportMessage.


        :param uri: The uri of this OnSupportMessage.
        :type uri: str
        """

        self._uri = uri
