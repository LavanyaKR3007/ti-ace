# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.add_on import AddOn  # noqa: F401,E501
from models.all_ofon_select_message_order_items_items import \
    AllOfonSelectMessageOrderItemsItems  # noqa: F401,E501
from models.base_model_ import Model
from models.location import Location  # noqa: F401,E501
from models.offer import Offer  # noqa: F401,E501
from models.provider import Provider  # noqa: F401,E501
from models.quotation import Quotation  # noqa: F401,E501


class OnSelectMessageOrder(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, provider: Provider=None, provider_location: Location=None, items: List[AllOfonSelectMessageOrderItemsItems]=None, add_ons: List[AddOn]=None, offers: List[Offer]=None, quote: Quotation=None):  # noqa: E501
        """OnSelectMessageOrder - a model defined in Swagger

        :param provider: The provider of this OnSelectMessageOrder.  # noqa: E501
        :type provider: Provider
        :param provider_location: The provider_location of this OnSelectMessageOrder.  # noqa: E501
        :type provider_location: Location
        :param items: The items of this OnSelectMessageOrder.  # noqa: E501
        :type items: List[AllOfonSelectMessageOrderItemsItems]
        :param add_ons: The add_ons of this OnSelectMessageOrder.  # noqa: E501
        :type add_ons: List[AddOn]
        :param offers: The offers of this OnSelectMessageOrder.  # noqa: E501
        :type offers: List[Offer]
        :param quote: The quote of this OnSelectMessageOrder.  # noqa: E501
        :type quote: Quotation
        """
        self.swagger_types = {
            'provider': Provider,
            'provider_location': Location,
            'items': List[AllOfonSelectMessageOrderItemsItems],
            'add_ons': List[AddOn],
            'offers': List[Offer],
            'quote': Quotation
        }

        self.attribute_map = {
            'provider': 'provider',
            'provider_location': 'provider_location',
            'items': 'items',
            'add_ons': 'add_ons',
            'offers': 'offers',
            'quote': 'quote'
        }
        self._provider = provider
        self._provider_location = provider_location
        self._items = items
        self._add_ons = add_ons
        self._offers = offers
        self._quote = quote

    @classmethod
    def from_dict(cls, dikt) -> 'OnSelectMessageOrder':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The on_select_message_order of this OnSelectMessageOrder.  # noqa: E501
        :rtype: OnSelectMessageOrder
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provider(self) -> Provider:
        """Gets the provider of this OnSelectMessageOrder.


        :return: The provider of this OnSelectMessageOrder.
        :rtype: Provider
        """
        return self._provider

    @provider.setter
    def provider(self, provider: Provider):
        """Sets the provider of this OnSelectMessageOrder.


        :param provider: The provider of this OnSelectMessageOrder.
        :type provider: Provider
        """

        self._provider = provider

    @property
    def provider_location(self) -> Location:
        """Gets the provider_location of this OnSelectMessageOrder.


        :return: The provider_location of this OnSelectMessageOrder.
        :rtype: Location
        """
        return self._provider_location

    @provider_location.setter
    def provider_location(self, provider_location: Location):
        """Sets the provider_location of this OnSelectMessageOrder.


        :param provider_location: The provider_location of this OnSelectMessageOrder.
        :type provider_location: Location
        """

        self._provider_location = provider_location

    @property
    def items(self) -> List[AllOfonSelectMessageOrderItemsItems]:
        """Gets the items of this OnSelectMessageOrder.


        :return: The items of this OnSelectMessageOrder.
        :rtype: List[AllOfonSelectMessageOrderItemsItems]
        """
        return self._items

    @items.setter
    def items(self, items: List[AllOfonSelectMessageOrderItemsItems]):
        """Sets the items of this OnSelectMessageOrder.


        :param items: The items of this OnSelectMessageOrder.
        :type items: List[AllOfonSelectMessageOrderItemsItems]
        """

        self._items = items

    @property
    def add_ons(self) -> List[AddOn]:
        """Gets the add_ons of this OnSelectMessageOrder.


        :return: The add_ons of this OnSelectMessageOrder.
        :rtype: List[AddOn]
        """
        return self._add_ons

    @add_ons.setter
    def add_ons(self, add_ons: List[AddOn]):
        """Sets the add_ons of this OnSelectMessageOrder.


        :param add_ons: The add_ons of this OnSelectMessageOrder.
        :type add_ons: List[AddOn]
        """

        self._add_ons = add_ons

    @property
    def offers(self) -> List[Offer]:
        """Gets the offers of this OnSelectMessageOrder.


        :return: The offers of this OnSelectMessageOrder.
        :rtype: List[Offer]
        """
        return self._offers

    @offers.setter
    def offers(self, offers: List[Offer]):
        """Sets the offers of this OnSelectMessageOrder.


        :param offers: The offers of this OnSelectMessageOrder.
        :type offers: List[Offer]
        """

        self._offers = offers

    @property
    def quote(self) -> Quotation:
        """Gets the quote of this OnSelectMessageOrder.


        :return: The quote of this OnSelectMessageOrder.
        :rtype: Quotation
        """
        return self._quote

    @quote.setter
    def quote(self, quote: Quotation):
        """Sets the quote of this OnSelectMessageOrder.


        :param quote: The quote of this OnSelectMessageOrder.
        :type quote: Quotation
        """

        self._quote = quote
