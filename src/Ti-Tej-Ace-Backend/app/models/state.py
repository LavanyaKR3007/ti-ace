# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model
from models.descriptor import Descriptor  # noqa: F401,E501


class State(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, descriptor: Descriptor=None, updated_at: datetime=None, updated_by: str=None):  # noqa: E501
        """State - a model defined in Swagger

        :param descriptor: The descriptor of this State.  # noqa: E501
        :type descriptor: Descriptor
        :param updated_at: The updated_at of this State.  # noqa: E501
        :type updated_at: datetime
        :param updated_by: The updated_by of this State.  # noqa: E501
        :type updated_by: str
        """
        self.swagger_types = {
            'descriptor': Descriptor,
            'updated_at': datetime,
            'updated_by': str
        }

        self.attribute_map = {
            'descriptor': 'descriptor',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by'
        }
        self._descriptor = descriptor
        self._updated_at = updated_at
        self._updated_by = updated_by

    @classmethod
    def from_dict(cls, dikt) -> 'State':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The State of this State.  # noqa: E501
        :rtype: State
        """
        return util.deserialize_model(dikt, cls)

    @property
    def descriptor(self) -> Descriptor:
        """Gets the descriptor of this State.


        :return: The descriptor of this State.
        :rtype: Descriptor
        """
        return self._descriptor

    @descriptor.setter
    def descriptor(self, descriptor: Descriptor):
        """Sets the descriptor of this State.


        :param descriptor: The descriptor of this State.
        :type descriptor: Descriptor
        """

        self._descriptor = descriptor

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this State.


        :return: The updated_at of this State.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this State.


        :param updated_at: The updated_at of this State.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self) -> str:
        """Gets the updated_by of this State.

        ID of entity which changed the state  # noqa: E501

        :return: The updated_by of this State.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by: str):
        """Sets the updated_by of this State.

        ID of entity which changed the state  # noqa: E501

        :param updated_by: The updated_by of this State.
        :type updated_by: str
        """

        self._updated_by = updated_by
