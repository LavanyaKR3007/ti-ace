# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model
from models.item_quantity_allocated import ItemQuantityAllocated  # noqa: F401,E501
from models.item_quantity_maximum import ItemQuantityMaximum  # noqa: F401,E501


class ItemQuantity(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, allocated: ItemQuantityAllocated=None, available: ItemQuantityAllocated=None, maximum: ItemQuantityMaximum=None, minimum: ItemQuantityAllocated=None, selected: ItemQuantityAllocated=None):  # noqa: E501
        """ItemQuantity - a model defined in Swagger

        :param allocated: The allocated of this ItemQuantity.  # noqa: E501
        :type allocated: ItemQuantityAllocated
        :param available: The available of this ItemQuantity.  # noqa: E501
        :type available: ItemQuantityAllocated
        :param maximum: The maximum of this ItemQuantity.  # noqa: E501
        :type maximum: ItemQuantityMaximum
        :param minimum: The minimum of this ItemQuantity.  # noqa: E501
        :type minimum: ItemQuantityAllocated
        :param selected: The selected of this ItemQuantity.  # noqa: E501
        :type selected: ItemQuantityAllocated
        """
        self.swagger_types = {
            'allocated': ItemQuantityAllocated,
            'available': ItemQuantityAllocated,
            'maximum': ItemQuantityMaximum,
            'minimum': ItemQuantityAllocated,
            'selected': ItemQuantityAllocated
        }

        self.attribute_map = {
            'allocated': 'allocated',
            'available': 'available',
            'maximum': 'maximum',
            'minimum': 'minimum',
            'selected': 'selected'
        }
        self._allocated = allocated
        self._available = available
        self._maximum = maximum
        self._minimum = minimum
        self._selected = selected

    @classmethod
    def from_dict(cls, dikt) -> 'ItemQuantity':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ItemQuantity of this ItemQuantity.  # noqa: E501
        :rtype: ItemQuantity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allocated(self) -> ItemQuantityAllocated:
        """Gets the allocated of this ItemQuantity.


        :return: The allocated of this ItemQuantity.
        :rtype: ItemQuantityAllocated
        """
        return self._allocated

    @allocated.setter
    def allocated(self, allocated: ItemQuantityAllocated):
        """Sets the allocated of this ItemQuantity.


        :param allocated: The allocated of this ItemQuantity.
        :type allocated: ItemQuantityAllocated
        """

        self._allocated = allocated

    @property
    def available(self) -> ItemQuantityAllocated:
        """Gets the available of this ItemQuantity.


        :return: The available of this ItemQuantity.
        :rtype: ItemQuantityAllocated
        """
        return self._available

    @available.setter
    def available(self, available: ItemQuantityAllocated):
        """Sets the available of this ItemQuantity.


        :param available: The available of this ItemQuantity.
        :type available: ItemQuantityAllocated
        """

        self._available = available

    @property
    def maximum(self) -> ItemQuantityMaximum:
        """Gets the maximum of this ItemQuantity.


        :return: The maximum of this ItemQuantity.
        :rtype: ItemQuantityMaximum
        """
        return self._maximum

    @maximum.setter
    def maximum(self, maximum: ItemQuantityMaximum):
        """Sets the maximum of this ItemQuantity.


        :param maximum: The maximum of this ItemQuantity.
        :type maximum: ItemQuantityMaximum
        """

        self._maximum = maximum

    @property
    def minimum(self) -> ItemQuantityAllocated:
        """Gets the minimum of this ItemQuantity.


        :return: The minimum of this ItemQuantity.
        :rtype: ItemQuantityAllocated
        """
        return self._minimum

    @minimum.setter
    def minimum(self, minimum: ItemQuantityAllocated):
        """Sets the minimum of this ItemQuantity.


        :param minimum: The minimum of this ItemQuantity.
        :type minimum: ItemQuantityAllocated
        """

        self._minimum = minimum

    @property
    def selected(self) -> ItemQuantityAllocated:
        """Gets the selected of this ItemQuantity.


        :return: The selected of this ItemQuantity.
        :rtype: ItemQuantityAllocated
        """
        return self._selected

    @selected.setter
    def selected(self, selected: ItemQuantityAllocated):
        """Sets the selected of this ItemQuantity.


        :param selected: The selected of this ItemQuantity.
        :type selected: ItemQuantityAllocated
        """

        self._selected = selected
