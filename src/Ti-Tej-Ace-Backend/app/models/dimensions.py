# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model
from models.scalar import Scalar  # noqa: F401,E501


class Dimensions(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, length: Scalar=None, breadth: Scalar=None, height: Scalar=None):  # noqa: E501
        """Dimensions - a model defined in Swagger

        :param length: The length of this Dimensions.  # noqa: E501
        :type length: Scalar
        :param breadth: The breadth of this Dimensions.  # noqa: E501
        :type breadth: Scalar
        :param height: The height of this Dimensions.  # noqa: E501
        :type height: Scalar
        """
        self.swagger_types = {
            'length': Scalar,
            'breadth': Scalar,
            'height': Scalar
        }

        self.attribute_map = {
            'length': 'length',
            'breadth': 'breadth',
            'height': 'height'
        }
        self._length = length
        self._breadth = breadth
        self._height = height

    @classmethod
    def from_dict(cls, dikt) -> 'Dimensions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Dimensions of this Dimensions.  # noqa: E501
        :rtype: Dimensions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def length(self) -> Scalar:
        """Gets the length of this Dimensions.


        :return: The length of this Dimensions.
        :rtype: Scalar
        """
        return self._length

    @length.setter
    def length(self, length: Scalar):
        """Sets the length of this Dimensions.


        :param length: The length of this Dimensions.
        :type length: Scalar
        """

        self._length = length

    @property
    def breadth(self) -> Scalar:
        """Gets the breadth of this Dimensions.


        :return: The breadth of this Dimensions.
        :rtype: Scalar
        """
        return self._breadth

    @breadth.setter
    def breadth(self, breadth: Scalar):
        """Sets the breadth of this Dimensions.


        :param breadth: The breadth of this Dimensions.
        :type breadth: Scalar
        """

        self._breadth = breadth

    @property
    def height(self) -> Scalar:
        """Gets the height of this Dimensions.


        :return: The height of this Dimensions.
        :rtype: Scalar
        """
        return self._height

    @height.setter
    def height(self, height: Scalar):
        """Sets the height of this Dimensions.


        :param height: The height of this Dimensions.
        :type height: Scalar
        """

        self._height = height
