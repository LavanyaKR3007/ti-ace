# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from models import util
from models.base_model_ import Model


class OperatorExperience(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, label: str=None, value: str=None, unit: str=None):  # noqa: E501
        """OperatorExperience - a model defined in Swagger

        :param label: The label of this OperatorExperience.  # noqa: E501
        :type label: str
        :param value: The value of this OperatorExperience.  # noqa: E501
        :type value: str
        :param unit: The unit of this OperatorExperience.  # noqa: E501
        :type unit: str
        """
        self.swagger_types = {
            'label': str,
            'value': str,
            'unit': str
        }

        self.attribute_map = {
            'label': 'label',
            'value': 'value',
            'unit': 'unit'
        }
        self._label = label
        self._value = value
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt) -> 'OperatorExperience':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Operator_experience of this OperatorExperience.  # noqa: E501
        :rtype: OperatorExperience
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self) -> str:
        """Gets the label of this OperatorExperience.


        :return: The label of this OperatorExperience.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label: str):
        """Sets the label of this OperatorExperience.


        :param label: The label of this OperatorExperience.
        :type label: str
        """

        self._label = label

    @property
    def value(self) -> str:
        """Gets the value of this OperatorExperience.


        :return: The value of this OperatorExperience.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this OperatorExperience.


        :param value: The value of this OperatorExperience.
        :type value: str
        """

        self._value = value

    @property
    def unit(self) -> str:
        """Gets the unit of this OperatorExperience.


        :return: The unit of this OperatorExperience.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit: str):
        """Sets the unit of this OperatorExperience.


        :param unit: The unit of this OperatorExperience.
        :type unit: str
        """

        self._unit = unit
